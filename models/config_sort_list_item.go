// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConfigSortListItem SortListItem
//
// Element in a SortList.
//
// swagger:model configSortListItem
type ConfigSortListItem struct {

	// The resource identifier.
	ACL string `json:"acl,omitempty"`

	// Type of element.
	//
	// Allowed values:
	//  * _any_,
	//  * _ip_,
	//  * _acl_,
	// Required: true
	Element *string `json:"element"`

	// Optional. The prioritized networks.
	// If empty, the value of _source_ or networks from _acl_ is used.
	PrioritizedNetworks []string `json:"prioritized_networks"`

	// Optional. Source address/network
	//
	// Must be empty if _element_ is not _ip_.
	Source string `json:"source,omitempty"`
}

// Validate validates this config sort list item
func (m *ConfigSortListItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateElement(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConfigSortListItem) validateElement(formats strfmt.Registry) error {

	if err := validate.Required("element", "body", m.Element); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this config sort list item based on context it is used
func (m *ConfigSortListItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigSortListItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigSortListItem) UnmarshalBinary(b []byte) error {
	var res ConfigSortListItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
