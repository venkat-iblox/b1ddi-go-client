// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InheritanceInheritedFloat InheritedFloat
//
// The inheritance configuration for a field of type _float_.
//
// swagger:model inheritanceInheritedFloat
type InheritanceInheritedFloat struct {

	// The inheritance setting for a field.
	//
	// Valid values are:
	// * _inherit_: Use the inherited value.
	// * _override_: Use the value set in the object.
	//
	// Defaults to _inherit_.
	Action string `json:"action,omitempty"`

	// The human-readable display name for the object referred to by _source_.
	// Read Only: true
	DisplayName string `json:"display_name,omitempty"`

	// The resource identifier.
	Source string `json:"source,omitempty"`

	// The inherited value.
	// Read Only: true
	Value float32 `json:"value,omitempty"`
}

// Validate validates this inheritance inherited float
func (m *InheritanceInheritedFloat) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this inheritance inherited float based on the context it is used
func (m *InheritanceInheritedFloat) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDisplayName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InheritanceInheritedFloat) contextValidateDisplayName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "display_name", "body", string(m.DisplayName)); err != nil {
		return err
	}

	return nil
}

func (m *InheritanceInheritedFloat) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "value", "body", float32(m.Value)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InheritanceInheritedFloat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InheritanceInheritedFloat) UnmarshalBinary(b []byte) error {
	var res InheritanceInheritedFloat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
