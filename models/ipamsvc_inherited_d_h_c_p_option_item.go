// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpamsvcInheritedDHCPOptionItem Inherited DHCP Option Item
//
// A wrapper of item (_dhcp/option_item_) in a list of Inherited DHCP options. It contains extra fields not covered by OptionItem.
//
// swagger:model ipamsvcInheritedDHCPOptionItem
type IpamsvcInheritedDHCPOptionItem struct {

	// Option inherited from the ancestor.
	Option *IpamsvcOptionItem `json:"option,omitempty"`

	// The resource identifier.
	OverridingGroup string `json:"overriding_group,omitempty"`
}

// Validate validates this ipamsvc inherited d h c p option item
func (m *IpamsvcInheritedDHCPOptionItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IpamsvcInheritedDHCPOptionItem) validateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.Option) { // not required
		return nil
	}

	if m.Option != nil {
		if err := m.Option.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("option")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("option")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this ipamsvc inherited d h c p option item based on the context it is used
func (m *IpamsvcInheritedDHCPOptionItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOption(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IpamsvcInheritedDHCPOptionItem) contextValidateOption(ctx context.Context, formats strfmt.Registry) error {

	if m.Option != nil {

		if swag.IsZero(m.Option) { // not required
			return nil
		}

		if err := m.Option.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("option")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("option")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IpamsvcInheritedDHCPOptionItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpamsvcInheritedDHCPOptionItem) UnmarshalBinary(b []byte) error {
	var res IpamsvcInheritedDHCPOptionItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
