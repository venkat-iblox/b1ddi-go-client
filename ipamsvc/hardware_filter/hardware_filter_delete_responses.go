// Code generated by go-swagger; DO NOT EDIT.

package hardware_filter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	b1cliruntime "github.com/infobloxopen/b1ddi-go-client/runtime"
)

// HardwareFilterDeleteReader is a Reader for the HardwareFilterDelete structure.
type HardwareFilterDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HardwareFilterDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	if response.Code() >= 400 && response.Code() < 500 {
		return nil, b1cliruntime.NewAPIHTTPError("response status code indicates client error", response.Body(), response.Code())
	}

	if response.Code() >= 500 && response.Code() < 600 {
		return nil, b1cliruntime.NewAPIHTTPError("response status code indicates server error", response.Body(), response.Code())
	}

	result := NewHardwareFilterDeleteOK()
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	return result, nil
}

// NewHardwareFilterDeleteOK creates a HardwareFilterDeleteOK with default headers values
func NewHardwareFilterDeleteOK() *HardwareFilterDeleteOK {
	return &HardwareFilterDeleteOK{}
}

/*
HardwareFilterDeleteOK describes a response with status code 200, with default header values.

OK
*/
type HardwareFilterDeleteOK struct {
}

func (o *HardwareFilterDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/hardware_filter/{id}][%d] hardwareFilterDeleteOK ", 200)
}

func (o *HardwareFilterDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
